version: "3.8"
networks:
  lab9-demo:
    name: lab9-demo-net
    driver: bridge
services:
  #Zookeeper container
  zookeeper:
    # image: confluentinc/cp-zookeeper:6.2.1
    image: confluentinc/cp-zookeeper:7.2.2.arm64
    hostname: zookeeper
    container_name: zookeeper
    networks:
      - lab9-demo
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  #Kafka container node1
  broker1:
    # image: confluentinc/cp-server:6.2.1
    image: confluentinc/cp-server:7.2.2.arm64
    hostname: broker1
    container_name: broker1
    healthcheck:
      test: nc -z localhost 9092
    networks:
      - lab9-demo
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker1:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_LISTENERS: PLAINTEXT://:29092,PLAINTEXT_HOST://:9092
      KAFKA_METRIC_REPORTERS: io.confluent.metrics.reporter.ConfluentMetricsReporter
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_CONFLUENT_LICENSE_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_CONFLUENT_BALANCER_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_JMX_PORT: 9101
      KAFKA_JMX_HOSTNAME: localhost
      KAFKA_CONFLUENT_SCHEMA_REGISTRY_URL: http://schema-registry:8081
      CONFLUENT_METRICS_REPORTER_BOOTSTRAP_SERVERS: broker1:29092
      CONFLUENT_METRICS_REPORTER_TOPIC_REPLICAS: 1
      CONFLUENT_METRICS_ENABLE: 'false'
      CONFLUENT_SUPPORT_CUSTOMER_ID: 'anonymous'
      KAFKA_CREATE_TOPICS: "hw9events:10:1"
  jobmanager:
    container_name: jobmanager
    hostname: jobmanager
    depends_on:
      - broker1
    # image: flink:latest
    # customer image with python support, see ../py-flink/Dockerfile
    image: barrymullan/pyflink:1.14.0
    ports:
      - "8081:8081"
    command: jobmanager
    environment:
      - |
        FLINK_PROPERTIES=
        jobmanager.rpc.address: jobmanager
    networks:
      - lab9-demo
    volumes:
    # for windows change this to the full path of your docker directory because windows does not define the $PWD variable
    # eg.  C:/Users/..../week9_flink/docker/flink-data:/flink-data
    - $PWD/flink-data:/flink-data

  taskmanager:
    container_name: taskmanager
    hostname: taskmanager
    # image: flink:latest
    # customer image with python support, see ../py-flink/Dockerfile
    image: barrymullan/pyflink:1.14.0
    depends_on:
      - jobmanager
    command: taskmanager
    scale: 1
    environment:
      - |
        FLINK_PROPERTIES=
        jobmanager.rpc.address: jobmanager
        taskmanager.numberOfTaskSlots: 4        
    networks:
      - lab9-demo
    volumes:
      # for windows change this to the full path of your docker directory because windows does not define the $PWD variable
      # C:/Users/..../week9_flink/docker/flink-data:/flink-data
      - $PWD/flink-data:/flink-data
